{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repo\\\\Portfolio-BackEnd\\\\frontend\\\\src\\\\components\\\\Admin\\\\ProjectCardAdmin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getProjectCards, addProjectCard, updateProjectCard, deleteProjectCard } from '../../services/projectCardService';\nimport { ProjectCard } from \"../ProjectCard/ProjectCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProjectCards = () => {\n  _s();\n  const [projectCards, setProjectCards] = useState([]);\n  const [newCard, setNewCard] = useState({\n    title: '',\n    description: '',\n    imageUrl: '',\n    link: ''\n  });\n  useEffect(() => {\n    fetchProjectCards();\n  }, []);\n  const fetchProjectCards = async () => {\n    const data = await getProjectCards();\n    setProjectCards(data);\n  };\n  const handleAddCard = async () => {\n    const addedCard = await addProjectCard(newCard);\n    setProjectCards([...projectCards, addedCard]);\n    setNewCard({\n      title: '',\n      description: '',\n      imageUrl: '',\n      link: ''\n    });\n  };\n  const handleUpdateCard = async (id, updatedInfo) => {\n    const updatedCard = await updateProjectCard(id, updatedInfo);\n    setProjectCards(projectCards.map(card => card._id === id ? updatedCard : card));\n  };\n  const handleDeleteCard = async id => {\n    await deleteProjectCard(id);\n    setProjectCards(projectCards.filter(card => card._id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Project Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: newCard.title,\n        onChange: e => setNewCard({\n          ...newCard,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: newCard.description,\n        onChange: e => setNewCard({\n          ...newCard,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Image URL\",\n        value: newCard.imageUrl,\n        onChange: e => setNewCard({\n          ...newCard,\n          imageUrl: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Link\",\n        value: newCard.link,\n        onChange: e => setNewCard({\n          ...newCard,\n          link: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddCard,\n        children: \"Add Project Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), projectCards.map((project, card) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ProjectCard, {\n        title: project.title,\n        description: project.description,\n        imageUrl: project.imageUrl,\n        link: project.link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUpdateCard(card._id, {\n          title: 'Updated Title'\n        }),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDeleteCard(card._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, card._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectCards, \"zQ+TUMuH4ISPbwRgxnJZu9nLa2Q=\");\n_c = ProjectCards;\nvar _c;\n$RefreshReg$(_c, \"ProjectCards\");","map":{"version":3,"names":["React","useState","useEffect","getProjectCards","addProjectCard","updateProjectCard","deleteProjectCard","ProjectCard","jsxDEV","_jsxDEV","ProjectCards","_s","projectCards","setProjectCards","newCard","setNewCard","title","description","imageUrl","link","fetchProjectCards","data","handleAddCard","addedCard","handleUpdateCard","id","updatedInfo","updatedCard","map","card","_id","handleDeleteCard","filter","style","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","project","_c","$RefreshReg$"],"sources":["D:/Repo/Portfolio-BackEnd/frontend/src/components/Admin/ProjectCardAdmin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getProjectCards, addProjectCard, updateProjectCard, deleteProjectCard } from '../../services/projectCardService';\nimport { ProjectCard } from \"../ProjectCard/ProjectCard\";\n\nexport const ProjectCards = () => {\n  const [projectCards, setProjectCards] = useState([]);\n  const [newCard, setNewCard] = useState({ title: '', description: '', imageUrl: '', link: '' });\n\n  useEffect(() => {\n    fetchProjectCards();\n  }, []);\n\n  const fetchProjectCards = async () => {\n    const data = await getProjectCards();\n    setProjectCards(data);\n  };\n\n  const handleAddCard = async () => {\n    const addedCard = await addProjectCard(newCard);\n    setProjectCards([...projectCards, addedCard]);\n    setNewCard({ title: '', description: '', imageUrl: '', link: '' });\n  };\n\n  const handleUpdateCard = async (id, updatedInfo) => {\n    const updatedCard = await updateProjectCard(id, updatedInfo);\n    setProjectCards(projectCards.map((card) => (card._id === id ? updatedCard : card)));\n  };\n\n  const handleDeleteCard = async (id) => {\n    await deleteProjectCard(id);\n    setProjectCards(projectCards.filter((card) => card._id !== id));\n  };\n\n  return (\n    <div style={{ marginTop : 2}}>\n      <h2>Project Cards</h2>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={newCard.title}\n          onChange={(e) => setNewCard({ ...newCard, title: e.target.value })}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Description\"\n          value={newCard.description}\n          onChange={(e) => setNewCard({ ...newCard, description: e.target.value })}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Image URL\"\n          value={newCard.imageUrl}\n          onChange={(e) => setNewCard({ ...newCard, imageUrl: e.target.value })}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Link\"\n          value={newCard.link}\n          onChange={(e) => setNewCard({ ...newCard, link: e.target.value })}\n        />\n        <button onClick={handleAddCard}>Add Project Card</button>\n      </div>\n\n      {\n        projectCards.map((project, card) => (\n          <div key={card._id}>\n            <ProjectCard\n              title={project.title}\n              description={project.description}\n              imageUrl={project.imageUrl}\n              link={project.link}\n            />\n            <button onClick={() => handleUpdateCard(card._id, { title: 'Updated Title' })}>Edit</button>\n            <button onClick={() => handleDeleteCard(card._id)}>Delete</button>\n            </div>\n          ))}\n          </div>\n  );\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}