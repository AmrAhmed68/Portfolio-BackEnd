{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repo\\\\Portfolio-BackEnd\\\\frontend\\\\src\\\\components\\\\Projects\\\\Projects.js\",\n  _s = $RefreshSig$();\nimport './Projects.css';\nimport { Container, Row, Col, Tab } from \"react-bootstrap\";\nimport { ProjectCard } from \"../ProjectCard/ProjectCard\";\nimport colorSharp2 from \"../../assets/img/color-sharp2.png\";\nimport 'animate.css';\nimport TrackVisibility from 'react-on-screen';\nimport { useState, useEffect } from 'react';\nimport { getProject } from '../../services/projectCardService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Projects = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    fetchProjectCards();\n  }, []);\n  const fetchProjectCards = async () => {\n    try {\n      const data = await getProject();\n      setProjects(data);\n      if (Array.isArray(data)) {\n        setProjects(data);\n      } else {\n        console.error(\"Unexpected API response format\", data);\n        setError(\"Unexpected data format from API\");\n      }\n    } catch (err) {\n      console.error(\"Error fetching project data\", err);\n      setError(\"Could not load projects.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"project\",\n    id: \"projects\",\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          size: 12,\n          children: /*#__PURE__*/_jsxDEV(TrackVisibility, {\n            children: ({\n              isVisible\n            }) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Projects\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Here are some of my projects that I've worked on. You can click on the image to view more details.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Tab.Container, {\n                id: \"projects-tabs\",\n                defaultActiveKey: \"first\",\n                children: /*#__PURE__*/_jsxDEV(Tab.Pane, {\n                  eventKey: \"first\",\n                  children: /*#__PURE__*/_jsxDEV(Row, {\n                    children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(ProjectCard, {\n                      id: project._id,\n                      title: project.title,\n                      details: project.details,\n                      Hedimage: project.Hedimage\n                    }, project._id || index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"background-image-right\",\n      src: colorSharp2,\n      alt: \"Background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"jv3fs8UXiKProQ8S4D2VvNrnlIo=\");\n_c = Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["Container","Row","Col","Tab","ProjectCard","colorSharp2","TrackVisibility","useState","useEffect","getProject","jsxDEV","_jsxDEV","Projects","_s","error","setError","projects","setProjects","fetchProjectCards","data","Array","isArray","console","err","className","id","children","size","isVisible","fileName","_jsxFileName","lineNumber","columnNumber","defaultActiveKey","Pane","eventKey","map","project","index","_id","title","details","Hedimage","src","alt","_c","$RefreshReg$"],"sources":["D:/Repo/Portfolio-BackEnd/frontend/src/components/Projects/Projects.js"],"sourcesContent":["import './Projects.css'\nimport { Container, Row, Col, Tab } from \"react-bootstrap\";\nimport { ProjectCard } from \"../ProjectCard/ProjectCard\";\nimport colorSharp2 from \"../../assets/img/color-sharp2.png\";\nimport 'animate.css';\nimport TrackVisibility from 'react-on-screen';\nimport { useState, useEffect } from 'react';\nimport {getProject} from '../../services/projectCardService'\n\nexport const Projects = () => {\n\n  const [error, setError] = useState(null);\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    fetchProjectCards();\n  }, []);\n  \n  const fetchProjectCards = async () => {\n    try{\n      const data = await getProject();\n      setProjects(data);\n      if (Array.isArray(data)) {\n        setProjects(data); \n      } else {\n        console.error(\"Unexpected API response format\", data);\n        setError(\"Unexpected data format from API\");\n      }\n    }  catch (err) {\n      console.error(\"Error fetching project data\", err);\n      setError(\"Could not load projects.\");\n    }\n  };\n\n  return (\n    <section className=\"project\" id=\"projects\">\n      <Container>\n        <Row>\n          <Col size={12}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n              <div>\n                <h2>Projects</h2>\n                <p>\n                  Here are some of my projects that I've worked on. You can\n                  click on the image to view more details.\n                </p>\n                  {error ? (\n                    <p>{error}</p>\n                      ) : (\n                <Tab.Container id=\"projects-tabs\" defaultActiveKey=\"first\">\n                  <Tab.Pane eventKey=\"first\">\n                    <Row>\n                      {\n                        projects.map((project, index) => (\n                          <ProjectCard\n                            key={project._id || index} \n                            id={project._id} \n                            title={project.title}\n                            details={project.details}\n                            Hedimage={project.Hedimage}\n                          />\n                        ))\n                      }\n                    </Row>\n                  </Tab.Pane>\n                </Tab.Container>\n                )}\n              </div>}\n            </TrackVisibility>\n          </Col>\n        </Row>\n      </Container>\n      <img className=\"background-image-right\" src={colorSharp2} alt=\"Background\" />\n    </section>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}